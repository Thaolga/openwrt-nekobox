<%#
	Argon is a clean HTML5 theme for LuCI. It is based on luci-theme-bootstrap and MUI and Argon Template

	luci-theme-argon
	Copyright 2020 Jerryk <jerrykuku@gmail.com>

	Have a bug? Please create an issue here on GitHub!
	https://github.com/jerrykuku/luci-theme-argon/issues

	luci-theme-bootstrap:
	Copyright 2008 Steven Barth <steven@midlink.org>
	Copyright 2008-2016 Jo-Philipp Wich <jow@openwrt.org>
	Copyright 2012 David Menting <david@nut-bolt.nl>

	MUI:
	https://github.com/muicss/mui

	Argon Theme
	https://demos.creative-tim.com/argon-dashboard/index.html

	Licensed to the public under the Apache License 2.0
-%>

<%+themes/spectra/out_header_login%>
<%
	local util		= require "luci.util"
	local fs		= require "nixio.fs"
	local nutil		= require "nixio.util"
	local json		= require "luci.jsonc"
	local sys		= require "luci.sys"
	local uci		= require 'luci.model.uci'.cursor()

	-- Fetch Local Background Media

	local function glob(...)
		local iter, code, msg = fs.glob(...)
		if iter then
			return nutil.consume(iter)
		else
			return nil, code, msg
		end
	end


	local imageTypes = " jpg png gif webp "
	local videoTypes = " mp4 webm "
	local allTypes = imageTypes .. videoTypes
	local function fetchMedia(path, themeDir)
		local backgroundTable = {}
		local backgroundCount = 0
		for i, f in ipairs(glob(path)) do
			attr = fs.stat(f)
			if attr then
				local ext = fs.basename(f):match(".+%.(%w+)$")
				if ext ~= nil then
					ext = ext:lower()
				end
				if ext ~= nil and string.match(allTypes, " "..ext.." ") ~= nil then
					local bg = {}
					bg.type = ext
					bg.url = themeDir .. fs.basename(f)
					table.insert(backgroundTable, bg)
					backgroundCount = backgroundCount + 1
				end
			end
		end
		return backgroundTable, backgroundCount
	end
	local function selectBackground(themeDir)
		local bgUrl			= media .. "/img/bg1.jpg"
		local backgroundType	= "Image"
		local mimeType			= ""

		if fs.access("/etc/config/spectra") then
			local online_wallpaper = uci:get_first('spectra', 'global', 'online_wallpaper') or (uci:get_first('spectra', 'global', 'bing_background') == '1' and 'bing')
			if (online_wallpaper and online_wallpaper ~= "none") then
				local picurl = sys.exec("/usr/libexec/spectra/online_wallpaper")
				if (picurl and picurl ~= '') then
					return picurl, "Image", ""
				end
			end
		end

		local backgroundTable, backgroundCount = fetchMedia("/www" .. themeDir .. "*", themeDir)
		if ( backgroundCount > 0 ) then
			local currentBg = backgroundTable[math.random(1, backgroundCount)]
			bgUrl			= currentBg.url
			if (string.match(videoTypes, " "..currentBg.type.." ") ~= nil) then
				backgroundType	= "Video"
				mimeType		= "video/" .. currentBg.type
			end
		end

		return bgUrl, backgroundType, mimeType
	end

	local boardinfo			= util.ubus("system", "board")
	local themeDir			= media .. "/background/"
	local bgUrl, backgroundType, mimeType = selectBackground(themeDir)
%>
<!-- Login Page Start -->
<div class="login-page">
	<% if ( backgroundType == "Video" ) then %>
	<!-- Video Player Start -->
	<div class="video">
		<video autoplay loop muted id="video">
			<source src="<%=bgUrl%>" type="<%=mimeType%>">
		</video>
	</div>
	<div class="volume-control mute"></div>
	<script>
		$(".volume-control").click(function(){
			if($(this).hasClass("mute")){
				$(this).removeClass("mute")
				$("#video").prop('muted', false);
			}else{
				$(this).addClass("mute")
				$("#video").prop('muted', true);
			}
		})
	</script>
	<!-- Video Player End -->
	<% else %>
	<!-- Image Background Start -->
	<div class="main-bg" id="main-bg" style="background-image:url(<%=bgUrl%>)"></div>
	<!-- Image Background End -->
	<% end %>
    <div style="min-height: 100vh; display: flex; justify-content: center; align-items: center; background: linear-gradient(135deg, #1e3c72 0%, #2a5298 100%);">
<style>
@font-face {
  font-family: "spectra";
  src: url("/luci-static/spectra/fonts/spectra.eot?u6kthm");
  src: url("/luci-static/spectra/fonts/spectra.eot?u6kthm#iefix") format("embedded-opentype"),
    url("/luci-static/spectra/fonts/spectra.ttf?u6kthm") format("truetype"),
    url("/luci-static/spectra/fonts/spectra.woff?u6kthm") format("woff"),
    url("/luci-static/spectra/fonts/spectra.svg?u6kthm#spectra") format("svg");
  font-weight: normal;
  font-style: normal;
  font-display: block;
}

.auth-icon {
  font-family: "spectra" !important;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  font-size: 20px;
  color: #4a5568;
}

.auth-icon.user::before { content: "\e971"; }
.auth-icon.pass::before { content: "\e910"; }

.auth-wrapper {
  background: rgba(255, 255, 255, 0.9);
  backdrop-filter: blur(10px);
  padding: 2.5rem;
  border-radius: 15px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  width: 100%;
  max-width: 400px;
  position: relative;
  animation: float 3s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

.icon-container {
  display: flex;
  align-items: center;
  margin-bottom: 1.5rem;
}

.icon-container .auth-icon {
  margin-right: 10px;
  animation: pulse 2s infinite;
}

.icon-container .auth-icon.user {
  color: #4CAF50; 
}

.icon-container .auth-icon.pass {
  color: #FF5722; 
}

.icon-container .auth-icon.user:hover {
  color: #388E3C; 
}

.icon-container .auth-icon.pass:hover {
  color: #D32F2F; 
}

.footer-info p {
    color: #A9A9A9 !important;
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

.input-field {
  flex-grow: 1;
}

.input-field input {
  width: 100%;
  padding: 12px 12px;
  border: 2px solid #e2e8f0;
  border-radius: 8px;
  font-size: 1rem;
  transition: all 0.3s ease;
  background: rgba(255, 255, 255, 0.5);
  backdrop-filter: blur(5px);
}

.input-field input:focus {
  border-color: #4f46e5;
  box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
  outline: none;
}

.submit-btn {
  width: 100%;
  padding: 14px;
  background: #4f46e5;
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  margin-top: 1rem;
  position: relative;
  overflow: hidden;
}

.submit-btn::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.3) 100%);
  animation: shine 1.5s infinite;
}

@keyframes shine {
  0% { left: -100%; }
  100% { left: 100%; }
}

.submit-btn:hover {
  background: #4338ca;
}

.alert-message {
  background: #fee2e2;
  color: #dc2626;
  padding: 1rem;
  border-radius: 8px;
  margin-bottom: 1.5rem;
  border: 1px solid #fca5a5;
  animation: fadeIn 0.5s ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}
</style>
<% local ver = require("luci.version") %>
    <div class="auth-wrapper">
        <div class="brand-section" style="text-align: center; margin-bottom: 2rem;">
            <a class="brand-logo" href="/" style="display: inline-flex; align-items: center; text-decoration: none; color: #2c3e50;">
                <img src="<%=media%>/img/spectra.svg" style="height: 40px; margin-right: 12px;">
                <span style="font-family: 'TypoGraphica', sans-serif; font-size: 1.8rem; font-weight: 600; letter-spacing: -0.5px;"><%=striptags( (boardinfo.hostname or "?") ) %></span>
            </a>
        </div>
        <% if fuser then %>
        <div class="alert-message">
            <%:Invalid username and/or password! Please try again.%>
        </div>
        <% end %>

        <form class="auth-form" method="post" action="<%=pcdata(luci.http.getenv("REQUEST_URI"))%>">
            <div class="form-group">
                <div class="icon-container">
                    <span class="auth-icon user"></span>
                    <div class="input-field">
                        <input type="text" 
                               id="authUsername" 
                               name="luci_username" 
                               value="<%=duser%>" 
                               placeholder="<%:Username%>"
                               onfocus="this.style.borderColor='#4f46e5'; this.style.boxShadow='0 0 0 3px rgba(79,70,229,0.1)'"
                               onblur="this.style.borderColor='#e2e8f0'; this.style.boxShadow='none'">
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="icon-container">
                    <span class="auth-icon pass"></span>
                    <div class="input-field">
                        <input type="password" 
                               id="authPassword" 
                               name="luci_password" 
                               placeholder="<%:Password%>"
                               onfocus="this.style.borderColor='#4f46e5'; this.style.boxShadow='0 0 0 3px rgba(79,70,229,0.1)'"
                               onblur="this.style.borderColor='#e2e8f0'; this.style.boxShadow='none'">
                    </div>
                </div>
            </div>

            <button type="submit" 
                    class="submit-btn">
                <%:Login%>
            </button>
        </form>
    <div class="footer-info" style="margin-top: 2rem; text-align: center;">
        <p>
            Powered by <a href="https://github.com/openwrt/luci" target="_blank">OpenWRT LuCI</a> | 
            <a href="https://github.com/Thaolga/openwrt-nekobox" target="_blank">Spectra Theme</a>
        </p>
    </div>
        <script type="text/javascript">//<![CDATA[
            document.getElementById('authPassword').focus();
        //]]></script>
        
        <%+themes/spectra/footer_login%>
    </div>
</div>
<audio id="background-audio" autoplay loop muted>
    <source src='/luci-static/spectra/img/bgm.mp3' type='audio/mp3'>
    Your browser does not support audio playback.
</audio>

<script>
window.addEventListener('load', function() {
    let audio = document.getElementById("background-audio");
    setTimeout(() => {
        audio.muted = false;
        audio.volume = 1.0;
        audio.play();
    }, 2000);
});
</script>