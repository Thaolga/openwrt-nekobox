######### 锚点 start #######
# 策略组相关
pr: &pr 
     type: select
     proxies: [⚡️ 全局规则,🇭🇰 香港手动,🇹🇼 台湾手动,🇸🇬 新加坡手动,🇯🇵 日本手动,🇰🇷 韩国手动,🇺🇲 美国手动,🇩🇪 德国手动,🇭🇰 香港自动,🇹🇼 台湾自动,🇸🇬 新加坡自动,🇯🇵 日本自动,🇰🇷 韩国自动,🇺🇲 美国自动,🇩🇪 德国自动,其它地区,全部节点,DIRECT]
exclude-filter-list: &exclude-filter "网站|地址|剩余|过期|时间|有效|套餐|到期|tg|邀请|官网" 
#这里是订阅更新和延迟测试相关的
p: &p
    type: http
    interval: 3600
    health-check: {enable: true, url: https://1.1.1.1/generate_204, interval: 300}

#规则集相关
c: &c {type: http, interval: 86400, behavior: classical, format: text}

#延迟测试
t: &t {type: url-test, url: https://1.1.1.1/generate_204, interval: 300, tolerance: 50}

######### 锚点 end #######

# url 里填写自己的订阅,名称不能重复
proxy-providers:
  provider1:
    <<: *p
    url: ""
    path: ./proxy_provider/subscription_1.yaml
    exclude-filter: *exclude-filter
    override:
      skip-cert-verify: true
  provider2:
    <<: *p
    url: ""
    path: ./proxy_provider/subscription_2.yaml
    exclude-filter: *exclude-filter
    override:
      skip-cert-verify: true
  provider3:
    <<: *p
    url: ""
    path: ./proxy_provider/subscription_3.yaml
    exclude-filter: *exclude-filter
    override:
      skip-cert-verify: true
  provider4:
    <<: *p
    url: ""
    path: ./proxy_provider/subscription_4.yaml
    exclude-filter: *exclude-filter
    override:
      skip-cert-verify: true

redir-port: 7892
port: 7890
socks-port: 7891
mixed-port: 7893
mode: rule
log-level: info
allow-lan: true
unified-delay: true
external-controller: 0.0.0.0:9090
secret: Akun
bind-address: 0.0.0.0
external-ui: ui
tproxy-port: 7895
tcp-concurrent: true	
enable-process: true
find-process-mode: always
ipv6: true

experimental:
  ignore-resolve-fail: true
  sniff-tls-sni: true
  tracing: true
hosts:
  "localhost": 127.0.0.1
profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  sniff:
    http: { ports: [1-442, 444-8442, 8444-65535], override-destination: true }
    tls: { ports: [1-79, 81-8079, 8081-65535], override-destination: true }
  force-domain:
      - "+.v2ex.com"
      - www.google.com
      - google.com
  skip-domain:
      - Mijia Cloud
      - dlg.io.mi.com
  sniffing:
    - tls
    - http
  port-whitelist:
    - "80"
    - "443"

tun:
  enable: true
  prefer-h3: true
  listen: 0.0.0.0:53
  stack: gvisor
  dns-hijack:
     - "any:53"
     - "tcp://any:53"
  auto-redir: true
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  ipv6: true
  default-nameserver:
    - '1.1.1.1'
    - '8.8.8.8'
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - 'stun.*.*'
    - 'stun.*.*.*'
    - '+.stun.*.*'
    - '+.stun.*.*.*'
    - '+.stun.*.*.*.*'
    - '+.stun.*.*.*.*.*'
    - '*.lan'
    - '+.msftncsi.com'
    - msftconnecttest.com
    - 'time?.*.com'
    - 'time.*.com'
    - 'time.*.gov'
    - 'time.*.apple.com'
    - time-ios.apple.com
    - 'time1.*.com'
    - 'time2.*.com'
    - 'time3.*.com'
    - 'time4.*.com'
    - 'time5.*.com'
    - 'time6.*.com'
    - 'time7.*.com'
    - 'ntp?.*.com'
    - 'ntp.*.com'
    - 'ntp1.*.com'
    - 'ntp2.*.com'
    - 'ntp3.*.com'
    - 'ntp4.*.com'
    - 'ntp5.*.com'
    - 'ntp6.*.com'
    - 'ntp7.*.com'
    - '+.pool.ntp.org'
    - '+.ipv6.microsoft.com'
    - speedtest.cros.wr.pvp.net
    - network-test.debian.org
    - detectportal.firefox.com
    - cable.auth.com
    - miwifi.com
    - routerlogin.com
    - routerlogin.net
    - tendawifi.com
    - tendawifi.net
    - tplinklogin.net
    - tplinkwifi.net
    - '*.xiami.com'
    - tplinkrepeater.net
    - router.asus.com
    - '*.*.*.srv.nintendo.net'
    - '*.*.stun.playstation.net'
    - '*.openwrt.pool.ntp.org'
    - resolver1.opendns.com
    - 'GC._msDCS.*.*'
    - 'DC._msDCS.*.*'
    - 'PDC._msDCS.*.*'
  use-hosts: true

  nameserver:
    - '8.8.4.4'
    - '1.0.0.1'
    - "https://1.0.0.1/dns-query"
    - "https://8.8.4.4/dns-query"
proxy-groups:
  - name: ⚡️ 全局规则
    type: select
    proxies: [ 🇭🇰 香港手动,🇹🇼 台湾手动,🇸🇬 新加坡手动,🇯🇵 日本手动,🇰🇷 韩国手动,🇺🇲 美国手动,🇩🇪 德国手动,🇭🇰 香港自动,🇹🇼 台湾自动,🇸🇬 新加坡自动,🇯🇵 日本自动,🇰🇷 韩国自动,🇺🇲 美国自动,🇩🇪 德国自动,其它地区,全部节点,DIRECT]

  - name: 🎥 Emby服务
    <<: *pr

  - name: 📲 电报信息
    <<: *pr
    
  - name: ✈️ 测速服务
    <<: *pr

  - name: 🇬 谷歌服务
    <<: *pr

  - name: 💎 Instagram
    <<: *pr

  - name: 📹 油管视频
    <<: *pr

  - name: Ⓜ️ 微软服务
    <<: *pr

  - name: 🤖 OpenAI
    <<: *pr

  - name: ▶️ 奈飞服务
    <<: *pr

  - name: 🎵 Spotify
    <<: *pr

  - name: 🐟 漏网之鱼
    <<: *pr
  
#地区分组
  - name: 🇭🇰 香港手动
    type: select
    include-all-providers: true
    filter: "(?i)港|hk|hongkong|hong kong"

  - name: 🇹🇼 台湾手动
    type: select
    include-all-providers: true
    filter: "(?i)台|新北|彰化|TW|Taiwan"
    
  - name: 🇸🇬 新加坡手动
    type: select
    include-all-providers: true
    filter: "(?i)(新|sg|singapore)"

  - name: 🇯🇵 日本手动
    type: select
    include-all-providers: true
    filter: "(?i)日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan"

  - name: 🇰🇷 韩国手动
    type: select
    include-all-providers: true
    filter: "(?i)(KR|Korea|KOR|首尔|韩|韓|春川)"

  - name: 🇺🇲 美国手动
    type: select
    include-all-providers: true
    filter: "(?i)美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States"

  - name: 🇩🇪 德国手动
    type: select
    include-all-providers: true
    filter: "(?i)(德|DE|DEU|Germany)"

  - name: 🇭🇰 香港自动
    <<: *t
    include-all-providers: true
    filter: "(?i)港|hk|hongkong|hong kong"

  - name: 🇹🇼 台湾自动
    <<: *t
    include-all-providers: true
    filter: "(?i)台|新北|彰化|TW|Taiwan"

  - name: 🇸🇬 新加坡自动
    <<: *t
    include-all-providers: true
    filter: "(?i)(新|sg|singapore)"

  - name: 🇯🇵 日本自动
    <<: *t
    include-all-providers: true
    filter: "(?i)日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan"

  - name: 🇰🇷 韩国自动
    <<: *t
    include-all-providers: true
    filter: "(?i)(KR|Korea|KOR|首尔|韩|韓|春川)"

  - name: 🇺🇲 美国自动
    <<: *t
    include-all-providers: true
    filter: "(?i)美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States"

  - name: 🇩🇪 德国自动
    <<: *t
    include-all-providers: true
    filter: "(?i)(德|DE|DEU|Germany)"

  - name: 其它地区
    type: select
    include-all-providers: true
    filter: "(?i)^(?!.*(?:🇭🇰|🇯🇵|🇺🇸|🇸🇬|🇹🇼|港|hk|hongkong|台|tw|taiwan|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan|德|DE|DEU|Germany|新|sg|KR|Korea|KOR|首尔|韩|韓|春川|singapore|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)).*"

  - name: 全部节点
    type: select
    include-all-providers: true

rules:
  - RULE-SET,lan,DIRECT
  - RULE-SET,ChinaASN,DIRECT
  - DST-PORT,8080,✈️ 测速服务
  - RULE-SET,speedtest,✈️ 测速服务
  - RULE-SET,emby,🎥 Emby服务
  - RULE-SET,telegram,📲 电报信息
  - RULE-SET,Instagram,💎 Instagram
  - RULE-SET,openai,🤖 OpenAI
  - RULE-SET,youtube,📹 油管视频
  - RULE-SET,google,🇬 谷歌服务
  - RULE-SET,microsoft,Ⓜ️ 微软服务
  - RULE-SET,netflix,▶️ 奈飞服务
  - RULE-SET,spotify,🎵 Spotify
  - RULE-SET,geolocation-!cn,🐟 漏网之鱼
  - MATCH,🐟 漏网之鱼
  
rule-providers:
  lan:
    <<: *c
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Lan/Lan.list"
    path: ./rules/Lan.list
  ChinaASN:
    <<: *c
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Surge/ChinaASN/ChinaASN.list"
    path: ./rules/ChinaASN.list
  emby:
    <<: *c
    url: "https://cf-workers-text2kv-eh7.pages.dev/emby.list?token=071496"
    path: ./rules/emby.list
  telegram:
    <<: *c
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Telegram/Telegram.list"
    path: ./rules/telegram.list
  speedtest:
    <<: *c
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Speedtest/Speedtest.list"
    path: ./rules/speedtest.list
  microsoft:
    <<: *c
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Microsoft/Microsoft.list"
    path: ./rules/microsoft.list
  openai:
    <<: *c
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/OpenAI/OpenAI.list"
    path: ./rules/OpenAI.list
  Instagram:
    <<: *c
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Instagram/Instagram.list"
    path: ./rules/Instagram.list
  youtube:
    <<: *c
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/YouTube/YouTube.list"
    path: ./rules/youtube.list
  google:
    <<: *c
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Google/Google.list"
    path: ./rules/google.list
  netflix:
    <<: *c
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Netflix/Netflix.list"
    path: ./rules/netflix.list
  spotify:
    <<: *c
    url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Spotify/Spotify.list"
    path: ./rules/Spotify.list
  geolocation-!cn:
    <<: *c
    url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/classical/geolocation-!cn.list"
    path: ./rules/geolocation-!cn.list